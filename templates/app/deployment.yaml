apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.app.name }}"
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.app.deployment.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
    spec:
      containers:
        - name: {{ .Values.app.name }}
          image: "{{ .Values.app.deployment.image }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.app.service.containerPort | default .Values.appEnvConfigMap.data.PORT }}
          envFrom:
          - configMapRef:
              name: {{ .Values.dbEnvConfigMap.name }}
          - configMapRef:
              name: {{ .Values.appEnvConfigMap.name }}
          resources:
            requests:
              memory: {{ .Values.app.resources.requests.memory }}
              cpu: {{ .Values.app.resources.requests.cpu }}
            limits:
              memory: {{ .Values.app.resources.limits.memory }}
              cpu: {{ .Values.app.resources.limits.cpu }}
          livenessProbe:
            httpGet:
              path: {{ .Values.app.livenessProbe.httpGet.path }}
              port: {{ .Values.app.livenessProbe.httpGet.port | default .Values.appEnvConfigMap.data.PORT }}
            initialDelaySeconds: {{ .Values.app.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.app.readinessProbe.httpGet.path }}
              port: {{ .Values.app.readinessProbe.httpGet.port | default .Values.appEnvConfigMap.data.PORT }}
            initialDelaySeconds: {{ .Values.app.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.readinessProbe.periodSeconds }}
